/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Definition
#define DEFAULT 0
#define SYM 	1
#define NAV 	2
#define NUM		3
#define DBUG 	4
#define SWITCH	5

&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};

/ {

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer { /*      LAYER 0      */
// ------------------------------------------------------------------------------
//        | Q | W | F |      P      |    B   | # |    J     |    L   | U | Y               |   BACKSPACE     |
//        | A | R | S |      T      |    G   | # |    M     |    N   | E | I               |        O        |
//        | Z | X | C |      D      |    V   | # |    K     |    H   | , | . (APPLICATION) |  SYMBOL_LAYER   |
//                    | SPACE (MEH) | LSHIFT | # | RCONTROL | RETURN | 

		bindings = <
		&kp Q &kp W &kp F &kp P                  &kp B     /**/ &kp J     &kp L      &kp U     &kp Y            &kp BACKSPACE 
		&kp A &kp R &kp S &kp T                  &kp G     /**/ &kp M     &kp N      &kp E     &kp I            &kp O
		&kp Z &kp X &kp C &kp D                  &kp V     /**/ &kp K     &kp H      &kp COMMA &mt K_APP PERIOD &to SYM 
          			      &mt LC(LS(LALT)) SPACE &kp LSHFT /**/ &kp RCTRL &kp RETURN
		>;
		};

       	    symbol { /*      LAYER 1      */
// ------------------------------------------------------------------------------
//        | ESC | @ | # |    $   |    %   | # |   ^   |     &     | * |   ;   | BACKSPACE |
//        | TAB | = | ' |    "   |    `   | # |   \   |     {     | } |   |   |  RETURN   |
//        |  ~  | - | + |    !   |    /   | # |   [   |     (     | ) |   ]   |   NAV_L   |
//                      | BASE_L | LSHIFT | # |  RALT |  DBUG_L   | 

		bindings = <
		&kp ESCAPE &kp AT_SIGN &kp HASH         &kp DOLLAR        &kp PERCENT /**/ &kp CARET        &kp AMPERSAND        &kp ASTERISK          &kp SEMICOLON     &kp BACKSPACE 
		&kp TAB    &kp EQUAL   &kp SINGLE_QUOTE &kp DOUBLE_QUOTES &kp GRAVE   /**/ &kp BACKSLASH    &kp LEFT_BRACE       &kp RIGHT_BRACE       &kp PIPE          &kp RETURN
		&kp TILDE  &kp MINUS   &kp PLUS         &kp EXCLAMATION   &kp SLASH   /**/ &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &to NAV  
					                            &to DEFAULT       &kp LSHFT   /**/ &kp RALT         &to DBUG  
		>;
		};
		
		    navigation { /*      LAYER 2      */
// ------------------------------------------------------------------------------
//        |    ESC    | APPLICATION | END PAGE  | BEG PAGE |   MEH  | # | WIN LEFT | PREV TAB | NXT TAB |  WIN RIGHT  | BACKSPACE |
//        |    TAB    |  PRINT SCR  | PAGE DOWN | PAGE UP  | DELETE | # |   LEFT   |   DOWN   |    UP   |    RIGHT    |  RETURN   |
//        |  SWTICH_L |             |    END    |   HOME   | LSHIFT | # |  RSHIFT  | RCONTROL |   RALT  | APPLICATION |  NUMBER_L |
//                                              |  BASE_L  |  LGUI  | # |   RALT   | SYMBOL_L |
		bindings = <
		&kp ESCAPE   &kp K_APP  &kp LC(END) &kp LC(HOME) &kp LC(LS(LALT)) /**/ &kp RG(LEFT) &kp RC(RS(TAB)) &kp RC(TAB) &kp RG(RIGHT) &kp BACKSPACE 
		&kp TAB      &kp PSCRN  &kp PG_DN   &kp PG_UP    &kp DELETE       /**/ &kp LEFT     &kp DOWN        &kp UP      &kp RIGHT     &kp RETURN
		&to SWITCH   &trans     &kp END     &kp HOME     &kp LSHIFT       /**/ &kp RSHFT    &kp RCTRL       &kp RALT    &kp K_APP     &to 3 
					                        &to DEFAULT  &kp LGUI         /**/ &kp SPC      &to 1 
		>;
		};	
		
		    number { /*      LAYER 3      */
// ------------------------------------------------------------------------------
//        | ESC | PLAY/PAUSE | CAPTIONS |    $   |    _   | # |   -   |     7     | 8 |   9   | BACKSPACE |
//        | TAB |    MUTE    | VOL_DOWN | VOL_UP |    +   | # |   =   |     4     | 5 |   6   |  RETURN   |
//        |  ~  |     *      | BRI_DOWN | BRI_UP |    .   | # |   0   |     1     | 2 |   3   |  MOVE_L   |
//                                      | BASE_L |  LGUI  | # |  RALT |  SYMBOL_L |
		bindings = <
		&kp ESCAPE &kp C_PLAY_PAUSE &kp C_CAPTIONS &kp DOLLAR   &kp UNDERSCORE /**/ &kp MINUS &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp BACKSPACE
		&kp TAB    &kp C_MUTE       &kp C_VOL_DN   &kp C_VOL_UP &kp PLUS       /**/ &kp EQUAL &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp RETURN
		&kp TILDE  &kp ASTERISK     &kp C_BRI_DN   &kp C_BRI_UP &kp DOT        /**/ &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N3 &to 2    
					                               &to 0        &kp LGUI       /**/ &kp RALT  &to 1 
		>;
		};

        debug { /*      LAYER 4      */
// ------------------------------------------------------------------------------
//        | LCNTRL | LALT | LSHIFt |  LGUI  |           | # |           |  RGUI  | RSHIFT | RALT | RCNTRL |
//        |   F1   |  F2  |   F3   |   F4   |    F5     | # |    F6     |   F7   |   F8   |  F9  |  F10   |
//        |        |      |        |        |           | # |    F11    |   F12  |        |      |        |
//                 	     		   | BASE_L | T(SYMBOL) | # | T(NUMBER) | T(NAV) |
		bindings = <
		&kp LCTRL &kp LALT &kp LSHIFT &kp LGUI &trans  /**/ &trans  &kp RGUI &kp RSHFT &kp RALT &kp RCTRL
		&kp F1 &kp F2 &kp F3 &kp F4      &kp F5  /**/ &kp F5  &kp F6  &kp F7  &kp F8 &kp F9 &kp F10
		&trans &trans &trans &trans      &trans  /**/ &kp F11 &kp F12 &trans &trans &trans
							 &to DEFAULT &mo SYM /**/ &mo NUM &mo NAV 
		>;
		};

		switching { /*      LAYER 5      */
// ------------------------------------------------------------------------------
//        |      |      |      |        |      | # |  |          |          |       |      |
//        | BT_0 | BT_1 | BT_2 |  BT_3  | BT_4 | # |  | SYMBOL_L | NUMBER_L | NAV_L | DBUG |
//        |      |      |      |        |      | # |  |          |          |       |      |
//                 			   | BASE_L |      | # |  |  BT_CLR  |
		bindings = <
		&trans       &trans       &trans       &trans       &trans       /**/ &trans &trans  &trans  &trans  &trans
		&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 /**/ &trans &to SYM &to NUM &to NAV &to DBUG
		&trans       &trans 	  &trans       &trans       &trans       /**/ &trans &trans  &trans  &trans  &trans  
					         				   &to DEFAULT  &trans       /**/ &trans &bt BT_CLR 
		>;
		};	
        
	};
};
